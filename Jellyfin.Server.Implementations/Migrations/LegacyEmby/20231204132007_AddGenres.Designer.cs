// <auto-generated />
using System;
using Jellyfin.Server.Implementations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jellyfin.Server.Implementations.Migrations.LegacyEmby
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20231204132007_AddGenres")]
    partial class AddGenres
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Jellyfin.Data.Entities.ChapterInfo", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ChapterIndex")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ImageDateModified")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<long>("StartPositionTicks")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId", "ChapterIndex");

                    b.ToTable("ChapterInfos");
                });

            modelBuilder.Entity("Jellyfin.Data.Entities.Libraries.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<uint>("RowVersion")
                        .IsConcurrencyToken()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Jellyfin.Data.Entities.UserItemData", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AudioStreamIndex")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastPlayedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Likes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PlaybackPositionTicks")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Played")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Rating")
                        .HasColumnType("REAL");

                    b.Property<int?>("SubtitleStreamIndex")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "Key");

                    b.ToTable("UserDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
